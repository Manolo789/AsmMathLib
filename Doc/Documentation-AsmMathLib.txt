====================================================================
AsmMathLib - Assembly Math Library
Copyright (C) 2021 Manolo789 -- see doc/LICENSE.TXT

====================================================================

===INTRODUCTION===
This is a fixed-point math library that supports the following functions:

Fixed point addition or subtraction - addsub
Fixed point multiplication - pmul
Fixed point division - pdiv
Sine - sin
Cosine - cos
Tangent - tan 
Constant PI - pi 

===GENERAL INFORMATION===
LANGUAGE: Assembly X86-16 bits (compiler: NASM)
TESTED SYSTEM: MikeOS 4.6.1.
MINIMUM REQUIREMENTS: Computer with the 80386 processor, 1 MB of RAM and real mode.
AUTHOR: Manolo789 (em7411081@gmail.com)
NOTE: The function of sin was based on this file: 
https://github.com/leonardo-ono/asm4mo/blob/master/examples/graphics/sin/sin.asm

CONTACT: If you find any error or want to clear any doubts 
 and/or make any suggestions, please contact me by email. 

===CHARACTERISTICS===
--NUMERICAL REPRESENTATION:
This library uses the following decimal representation, for example:

1,23 = 123/100

Thus, the number 100 is equivalent to the SCALE FACTOR of the number
 1.23, that is, fractional decimal numbers are represented through FRACTIONS.
In this way, it is easier to calculate a fractional number.

In the AddSub, PMUL and PDIV function, the scale factor of the
 number_1 is the CX and number_2 register is DX.
The SIN, COS and TAN functions, does not
 necessitate the scale factor in the input.

--SIGNAL:
The sign of a number is represented as 0 for + and 1 for -, making calculation easier.
In function addsub, pmul and pdiv, sign number_1 is stored in
 the SI register, while the sign of number_2 is stored in the DI register.
The sign of the number resulting from the operation is stored in the SI.

===LIMITATIONS===
-Functions do not have an error banner of overflow and underflow.
-Sine, Cosine and Tangent can only calculate 3 decimal places after the decimal point.
-The constant PI has only two places after the decimal point.
 
===ERROR LIST===
-If you try to do a division by zero, the Carry (CF) flag in 
 PDIV will return 1, but if not, it will return 0.
-In the tan function, if the input has a number where the result
 DOES NOT EXIST (for example: 90 or 270 degrees), then the output
 will be Carry Flag (CF) equal to 1.
 
===HOW TO COMPILE THE AsmMathLib===
--EXEMPLE:
Used files:
	include (folder)
	mathlib.inc

To use the library, you must include the 'asmmathlib.inc' file with the
 '%include	"mathlib.inc"' command at the end of the file.

Then simply compile the file with the command:

nasm -O0 -w+orphan-labels -f bin example.asm -o example.bin

===AsmMathLib INSTRUCTIONS===
--------------------------------------------------------------------
 addsub -- Fixed point addition or subtraction
 INPUT: AX = NUMBER_1
 INPUT: BX = NUMBER_2
 INPUT: CX = SCALE FACTOR OF NUMBER_1
 INPUT: DX = SCALE FACTOR OF NUMBER_2
 INPUT: SI = SIGN(0 = + OR 1 = -) OF NUMBER_1
 INPUT: DI = SIGN(0 = + OR 1 = -) OF NUMBER_2
 OUTPUT: AX = ADD OR SUB RESULT
 OUTPUT: CX = FINAL SCALE FACTOR
 OUTPUT: SI = FINAL SIGN(0 = + OR 1 = -)
 
--------------------------------------------------------------------
 pmul -- Fixed point multiplication
 INPUT: AX = NUMBER_1
 INPUT: BX = NUMBER_2
 INPUT: CX = SCALE FACTOR OF NUMBER_1
 INPUT: DX = SCALE FACTOR OF NUMBER_2
 INPUT: SI = SIGN(0 = + OR 1 = -) OF NUMBER_1
 INPUT: DI = SIGN(0 = + OR 1 = -) OF NUMBER_2
 OUTPUT: AX = MULTIPLICATION RESULT
 OUTPUT: CX = FINAL SCALE FACTOR
 OUTPUT: SI = FINAL SIGN(0 = + OR 1 = -)
 
--------------------------------------------------------------------
 pdiv -- Fixed point division
 INPUT: AX = NUMBER_1
 INPUT: BX = NUMBER_2
 INPUT: CX = SCALE FACTOR OF NUMBER_1
 INPUT: DX = SCALE FACTOR OF NUMBER_2
 INPUT: SI = SIGN(0 = + OR 1 = -) OF NUMBER_1
 INPUT: DI = SIGN(0 = + OR 1 = -) OF NUMBER_2
 OUTPUT: AX = QUOTIENT (WITH INTEGER AND FRACTIONAL PART)
 OUTPUT: BX = REMAINDER
 OUTPUT: CX = FINAL SCALE FACTOR
 OUTPUT: Carry Flag (CF) = ERROR INDICATOR FOR DIVISION BY ZERO (1 = ERROR, 0 = NOT ERROR)
 OUTPUT: SI = FINAL SIGN(0 = + OR 1 = -)
 
--------------------------------------------------------------------
 sin -- Sine in Degrees
 INPUT: AX = ANGLE IN DEGREES(0-360)
 OUTPUT: AX = SINE / 1000
 OUTPUT: SI = SIGNAL(0 = + OR 1 = -)
 
--------------------------------------------------------------------
 cos -- Cosine in Degrees
 INPUT: AX = ANGLE IN DEGREES(0-360)
 OUTPUT: AX = COSINE / 1000
 OUTPUT: SI = SIGNAL(0 = + OR 1 = -)
 
--------------------------------------------------------------------
 tan -- tangent in degrees
 INPUT: AX = ANGLE IN DEGREES(0-360)
 OUTPUT: AX = TANGENT / 1000
 OUTPUT: SI = SIGNAL(0 = + OR 1 = -)
 OUTPUT: If Carry Flag (CF) is equal to 1, it means that the tangent of the AX register DOES NOT EXIST.
 OUTPUT: But if Carry Flag (CF) is equal to 0, the tangent of the register of AX IS VALID.

--------------------------------------------------------------------
 pi -- Constant pi
 OUTPUT: PI = constant pi (3.14)
 OUTPUT: PI_SCALE_FACTOR = 100
